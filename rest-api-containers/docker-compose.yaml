version: '3'

services:
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 12345678
      DB_NAME: postgres
      LOG_LEVEL: debug
    restart: on-failure
    depends_on:
      - postgres

  graphql-service:
    build:
      context: ./graphql-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: on-failure
     
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 12345678
      DB_NAME: postgres
    restart: on-failure
    depends_on:
      - postgres
      
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    depends_on:
      - mongodb
      - rabbitmq
    restart: on-failure
   
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    depends_on:
      - mongodb
      - rabbitmq
      - order-service
    restart: on-failure

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: postgres
    restart: on-failure
    
  mongodb:
    image: mongo:latest
    restart: on-failure
    
  rabbitmq:
    image: rabbitmq:latest
    restart: on-failure
